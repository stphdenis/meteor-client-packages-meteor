{"version":3,"sources":["meteor://ðŸ’»app/packages/localstorage/localstorage.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yF","file":"/packages/localstorage.js","sourcesContent":["// Meteor._localStorage is not an ideal name, but we can change it later.\n\n// Let's test to make sure that localStorage actually works. For example, in\n// Safari with private browsing on, window.localStorage exists but actually\n// trying to use it throws.\n// Accessing window.localStorage can also immediately throw an error in IE (#1291).\n\nvar key = '_localstorage_test_' + Random.id();\nvar retrieved;\ntry {\n  if (window.localStorage) {\n    window.localStorage.setItem(key, key);\n    retrieved = window.localStorage.getItem(key);\n    window.localStorage.removeItem(key);\n  }\n} catch (e) {\n  // ... ignore\n}\nif (key === retrieved) {\n  Meteor._localStorage = {\n    getItem: function (key) {\n      return window.localStorage.getItem(key);\n    },\n    setItem: function (key, value) {\n      window.localStorage.setItem(key, value);\n    },\n    removeItem: function (key) {\n      window.localStorage.removeItem(key);\n    }\n  };\n}\n\nif (!Meteor._localStorage) {\n  Meteor._debug(\n    \"You are running a browser with no localStorage or userData \"\n      + \"support. Logging in from one tab will not cause another \"\n      + \"tab to be logged in.\");\n\n  Meteor._localStorage = {\n    _data: {},\n\n    setItem: function (key, val) {\n      this._data[key] = val;\n    },\n    removeItem: function (key) {\n      delete this._data[key];\n    },\n    getItem: function (key) {\n      var value = this._data[key];\n      if (value === undefined)\n        return null;\n      else\n        return value;\n    }\n  };\n}\n"]}